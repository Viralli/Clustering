DBSCAN Clustering

    What is DBSCAN Clustering?

        DBSCAN (Density-Based Spatial Clustering of Applications with Noise) is a density-based clustering algorithm that identifies clusters in large spatial datasets by examining the density of data points.
        Unlike other clustering algorithms, DBSCAN does not require the number of clusters to be specified beforehand and can find arbitrarily shaped clusters.

    Why Do We Need DBSCAN Clustering?

        DBSCAN clustering is essential for various applications due to its ability to:

        1. Identify clusters of varying shapes and sizes.
        
        2. Handle noise and outliers effectively.
 
        3. Automatically determine the number of clusters based on the data density.

    Basic Terms and Definitions

        Epsilon (eps): Epsilon (eps)

           Epsilon (`eps`) is a key parameter in the DBSCAN algorithm. It defines the maximum distance between two points for them to be considered neighbors. In simpler terms, `eps` sets the radius of the neighborhood around 
        each point. Points within this radius of another point are considered part of its neighborhood, affecting how clusters are formed based on their density.

        Minimum Samples (min_samples)

           The minimum number of points required to form a dense region (a cluster). This includes the point itself and its neighbors.

       Core Point

           A point is considered a core point if it has at least `min_samples` points (including itself) within its `eps` neighborhood.

       Border Point

          A point is considered a border point if it is not a core point but falls within the `eps` neighborhood of a core point.

      Noise Point

          A point is considered a noise point if it is neither a core point nor a border point. Noise points are considered outliers.

  Where Does DBSCAN Do Well?

      DBSCAN performs well in scenarios where:

          The data contains clusters of varying shapes and sizes.

          There are noise points or outliers that need to be effectively identified.

          The number of clusters is not known beforehand.

          The data contains densely packed points that form clusters.

  Working of DBSCAN Algorithm

     DBSCAN is a density-based clustering algorithm that divides a dataset into clusters based on the density of points in the feature space. Unlike centroid-based clustering algorithms like K-means, DBSCAN does not 
     require specifying the number of clusters beforehand, making it particularly useful for datasets where the number of clusters is not known in prior or where clusters have varying densities.

    Steps of the Algorithm:

        1. Initialization: 

           DBSCAN begins by randomly selecting a point that has not been visited yet.
       
           It retrieves all points in its eps-neighborhood (including itself).

       2. Core Point Identification:

           If the number of points in the eps-neighborhood of the selected point is greater than or equal to `min_samples`, it's labeled as a core point.
      
           Core points are those that have at least `min_samples` points within their eps-neighborhood.

       3. Expansion to Density-Connected Points:

          For each core point or a border point (a point that is reachable from a core point but doesn’t have enough neighbors to be considered a core point itself), DBSCAN recursively finds all its density-connected points.
      
          A point is density-connected to another if there exists a chain of points, each having at most `eps` distance from the next one.

      4. Cluster Formation:

          Points that can't reach enough neighbors to be core points and don't have core points in their eps-neighborhoods are labeled as noise points or outliers.
      
          As DBSCAN progresses, clusters of arbitrary shape and size are formed.

  Advantages and Use Cases:

        Robust to Noise: DBSCAN can handle outliers (noise points) effectively by classifying them separately.

        Cluster Shape Flexibility: It can identify clusters of arbitrary shapes and sizes based on density.

        Automatic Cluster Number Detection: It doesn’t require specifying the number of clusters beforehand.

  Limitations:

    Sensitive to Parameters: The performance of DBSCAN can be sensitive to the choice of eps and min_samples parameters.

    Difficulty with Varying Density: DBSCAN may struggle with datasets of varying densities or clusters embedded within each other.

  Practical Applications:

     Spatial Data Analysis: Identifying clusters of spatially dense points, such as identifying hotspot regions in crime analysis.

     Customer Segmentation: Grouping customers based on their purchasing behaviors

     Anomaly Detection: Identifying unusual patterns or outliers in data.

     DBSCAN is widely used in various fields due to its ability to handle complex datasets and its robustness in identifying clusters based on density rather than proximity to centroids.

 DBSCAN Algorithm Implementations:

   I have developed two implementations of the DBSCAN algorithm:

         1. Basic DBSCAN Clustering: Demonstrates DBSCAN clustering on a set of sample points with default parameters.

         2. Modified DBSCAN Clustering: Illustrates DBSCAN clustering on a different set of points with adjusted parameters for epsilon and minimum samples.

  These implementations showcase the application of DBSCAN for clustering data points with varying densities.

Detailed Implementations:

  For detailed implementations of the DBSCAN algorithm(Basic DBSCAN Clustering and Modified DBSCAN Clustering) with explanations and code please refer to there respective files
